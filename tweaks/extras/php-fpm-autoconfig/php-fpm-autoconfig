#!/bin/bash

scriptName=$(basename $BASH_SOURCE)
rcLocalFile=/etc/rc.local
service=$(systemctl | grep fpm | awk '{print $1}')

function disableAfterRun(){

    # disable script after first run	
    sed -i '/'"${scriptName}"'/s/^/#/g' $rcLocalFile
    sed -i '/'"${scriptName}"'/s/^/#/g' $rcLocalFile.bck

}

### basic check php-fpm existence
if [[ -z "$service" ]]; then
    echo "php-fpm is not installed" | tee -a /root/guest.errlog
    disableAfterRun
    exit 1
fi

# php-fpm-autoconfig path
autoconfigPath=/opt/installer/autoconfig/php-fpm-autoconfig

# Configure the amount of RAM the service will ignore and reserve to OS or other applications (in MB).
reserveRam=300

# Configure the amount of RAM the service will use (in percentage).
serviceRamUsage=100

# Configure the amount of RAM to calculate to each php-fpm process will consume, based on this value script will calculate how many php-fpm processes to allow (in MB).
ramphpfpm=85

# Configure the minimum processes the php-fpm will wait in memory.
minphpfpm=6

### Configuring php-fpm file ###
ini=$(find /etc -type f -name "php.ini" | grep fpm)
fpmini=$(find /etc -type f -name "www.conf")

### read system resources ###

totalram=`cat /proc/meminfo | grep MemTotal | awk '{print int($2/1024)}'`

#cpu=`nproc`

### read current settings in php.ini

currentmem=`awk '/memory_limit/' $ini`

### override settings of this script ###

overridemem=`awk '!/#/' $autoconfigPath/php.ini | awk '/memory/'`
overridemaxchild=`awk '!/#/' $autoconfigPath/php.ini | awk '/pm.max_children/'`
overridestartsrv=`awk '!/#/' $autoconfigPath/php.ini | awk '/pm.start_servers/'`
overrideminsparesrv=`awk '!/#/' $autoconfigPath/php.ini | awk '/pm.min_spare_servers/'`
overridemaxsparesrv=`awk '!/#/' $autoconfigPath/php.ini | awk '/pm.max_spare_servers/'`

### read fpm settings ###

maxchild=`awk '/pm.max_children =/' $fpmini`
startsrv=`awk '/pm.start_servers =/' $fpmini`
minsparesrv=`awk '/pm.min_spare_servers =/' $fpmini`
maxsparesrv=`awk '/pm.max_spare_servers =/' $fpmini`

### Calculate fpm settings ###
if [ $totalram -ge 1024 ]; then
    calc=$((($totalram/100) * $serviceRamUsage - $reserveRam))
    recommended=$(expr $calc / $ramphpfpm)
else
    recommended=$minphpfpm
fi

echo "$recommended is recommended value"
calcmin=$(expr $recommended \* 20 / 100)

###

if [ -z "$overridemaxchild" ]; then
    echo "setting pm.max_children = $recommended"
    sed -i "s/$maxchild/pm.max_children = $recommended/g" $fpmini
else
    sed -i "s/$maxchild/$overridemaxchild/g" $fpmini
fi

if [ -z "$overridestartsrv" ]; then
    echo "setting pm.start_servers = $calcmin"
    sed -i "s/$startsrv/pm.start_servers = $calcmin/g" $fpmini
else
    sed -i "s/$startsrv/$overridestartsrv/g" $fpmini
fi


if [ -z "$overrideminsparesrv" ]; then
    echo "setting pm.min_spare_server = $calcmin"
    sed -i "s/$minsparesrv/pm.min_spare_servers = $calcmin/g" $fpmini
else
    sed -i "s/$minsparesrv/$overrideminsparesrv/g" $fpmini
fi

if [ -z "$overridemaxsparesrv" ]; then
    echo "setting pm.max_spare_servers = $recommended"
    sed -i "s/$maxsparesrv/pm.max_spare_servers = $recommended/g" $fpmini
else
    sed -i "s/$maxsparesrv/$overridemaxsparesrv/g" $fpmini
fi

systemctl restart $service

### Auto set Memory limit ###

recommendedlimit=$(expr $totalram / 4 )M

if [ -z "$overridemem" ]; then
    echo "You have ${totalram} of RAM"
    echo "settings memory_limit to ${recommendedlimit}"
    sed -i "s/$currentmem/memory_limit = $recommendedlimit/g" $ini
    systemctl restart $service
else
    echo "Settings have been overriden"
    echo "setting memory_limit to $overridemem"
    sed -i "s/$currentmem/$overridemem/g" $ini
fi

disableAfterRun

exit 0